# Prot칩tipo simples para converter string decimal para bin치rio com tags UBN

def decimal_to_ubn_bin(value: int) -> bytes:
    """
    Converte um inteiro decimal para um bloco UBN bin치rio simples.
    """
    header = b'UBN01'  # header fixo
    type_tag = b'DEC'  # tipo decimal
    payload = value.to_bytes((value.bit_length() + 7) // 8, byteorder='big')
    length = len(payload).to_bytes(2, 'big')
    metadata = b'SRC=python;FUNC=decimal_to_ubn_bin;'
    block = header + type_tag + length + payload + metadata
    return block

if __name__ == "__main__":
    val = 12345
    blk = decimal_to_ubn_bin(val)
    print(f"Bloco UBN para {val}: {blk.hex()}")

# Prot칩tipo VM simples para ler e interpretar bloco UBN (limitado)

def parse_ubn_block(block: bytes):
    header = block[0:5].decode()
    type_tag = block[5:8].decode()
    length = int.from_bytes(block[8:10], 'big')
    payload = block[10:10+length]
    metadata = block[10+length:].decode()
    return {
        "header": header,
        "type": type_tag,
        "length": length,
        "payload": payload,
        "metadata": metadata
    }

if __name__ == "__main__":
    example_block = b'UBN01DEC\x0002\x30\x39SRC=python;FUNC=decimal_to_ubn_bin;'
    parsed = parse_ubn_block(example_block)
    print(parsed)


